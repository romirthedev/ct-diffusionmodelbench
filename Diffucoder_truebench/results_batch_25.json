[
  {
    "index": 0,
    "problem_id": "Usa2005P2",
    "name": "Usa2005P2",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": true,
    "problem_statement": "/-!\n# USA Mathematical Olympiad 2005, Problem 2\n\nProve that there do not exist integers x,y,z such that\n\n        x\u2076 + x\u00b3 + x\u00b3y + y = 147\u00b9\u2075\u2077\n        x\u00b3 + x\u00b3y + y\u00b2 + y + z\u2079 = 157\u00b9\u2074\u2077.\n-/",
    "formal_statement": "theorem usa2005_p2 :\n    \u00ac\u2203 (x y z : \u2124),\n       x^6 + x^3 + x^3 * y + y = 147^157 \u2227\n       x^3 + x^3 * y + y^2 + y + z^9 = 157^147 := by sorry",
    "generated_solution": "```lean\nimport data.nat.basic\n\nopen nat\n\ndef equation1 (x y z : nat) : Prop :=\n  x^6 + x^3 + x^3 * y + y = 147^157\n\ndef equation2 (x y z : nat) : Prop :=\n  x^3 + x^3 * y + y^2 + y + z^9 = 157^147\n\nlemma not_solutions : \u2200 (x y z : nat), equation1 x y z \u2192 equation2 x y z \u2192 false,\nbegin\n  intros x y z h1,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n  cases h2,\n  cases h1,\n",
    "generation_time": 10.06604266166687,
    "generation_success": true,
    "solution_length": 604,
    "solution_words": 125,
    "lean_keywords_used": 4,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.6666666666666666
  },
  {
    "index": 1,
    "problem_id": "Imo2006P3",
    "name": "Imo2006P3",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2006, Problem 3\n\nDetermine the least real number $M$ such that\n$$\n\\left| ab(a^2 - b^2) + bc(b^2 - c^2) + ca(c^2 - a^2) \\right|\n\u2264 M (a^2 + b^2 + c^2)^2\n$$\nfor all real numbers $a$, $b$, $c$.\n-/",
    "formal_statement": "noncomputable abbrev solution : \u211d := 9 * Real.sqrt 2 / 32\n\ntheorem imo2006_p3 :\n    IsLeast\n      { M | (\u2200 a b c : \u211d,\n              |a * b * (a ^ 2 - b ^ 2) + b * c * (b ^ 2 - c ^ 2) + c * a * (c ^ 2 - a ^ 2)| \u2264\n              M * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2) } solution := by sorry",
    "generated_solution": "```lean\nimport data.real.basic\nimport data.real.norm\n\nnamespace real\n\ndef f (a b c : real) : real := a * (a * a - b * b) + b * (b * b - c * c) + c * (c * c - a * a)\n\ndef g (a b c : real) : real := (a * a + b * b + c * c) ^ 2\n\ndef M (a b c : real) : real := g / (f a b c)\n\ndef f_le (a b c : real) : Prop := |f a b c| \u2264 M a b c * g a b c\n\nlemma f_le (a b c : real) : f_le a b c :=\nbegin\n  split,\n  { apply real.abs_le_mul,\n    split,\n    { apply real.le_le_mul,\n      split,\n      { apply real.le_le_mul,\n        split,\n        { apply real.le_le_mul,\n          split,\n          { apply real.le_le_mul,\n            split,\n            { apply real.le_le_mul,\n              split,\n              { apply real.le_le_mul,\n                split,\n                { apply real.le_le_mul,\n                  split,\n                  { apply real",
    "generation_time": 8.000776052474976,
    "generation_success": true,
    "solution_length": 833,
    "solution_words": 159,
    "lean_keywords_used": 3,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": false,
    "formal_overlap_ratio": 0.4722222222222222
  },
  {
    "index": 2,
    "problem_id": "Imo2020P2",
    "name": "Imo2020P2",
    "category": "algebra",
    "tags": [
      "algebra",
      "inequality"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2020, Problem 2\n\nThe real numbers `a`, `b`, `c`, `d` are such that `a \u2265 b \u2265 c \u2265 d > 0` and `a + b + c + d = 1`.\nProve that `(a + 2b + 3c + 4d) a^a b^b c^c d^d < 1`.\n-/",
    "formal_statement": "theorem imo2020_q2 (a b c d : \u211d) (hd0 : 0 < d) (hdc : d \u2264 c) (hcb : c \u2264 b) (hba : b \u2264 a)\n    (h1 : a + b + c + d = 1) : (a + 2 * b + 3 * c + 4 * d) * a ^ a * b ^ b * c ^ c * d ^ d < 1 := by sorry",
    "generated_solution": "```lean\nimport data.real.basic\nimport data.real.pow\n\nnamespace problem\n\nvariables a b c d : real\n\nlemma h1 : a + b + c + d = 1\nlemma h2 : a \u2265 b \u2265 c \u2265 d > 0\n\nlemma solution : (a + 2b + 3c + 4d) a^a b^b c^c d^d < 1 :=\nbegin\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n  assume h2,\n  assume h1,\n ",
    "generation_time": 7.957628965377808,
    "generation_success": true,
    "solution_length": 652,
    "solution_words": 122,
    "lean_keywords_used": 1,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.36363636363636365
  },
  {
    "index": 3,
    "problem_id": "Usa1979P1",
    "name": "Usa1979P1",
    "category": "algebra",
    "tags": [
      "algebra",
      "inequality"
    ],
    "solved": true,
    "problem_statement": "/-!\n# USA Mathematical Olympiad 1979, Problem 1\n\nDetermine all non-negative integral solutions $(n_1,n_2,\\dots , n_{14})$ if any,\napart from permutations, of the Diophantine Equation $n_1^4+n_2^4+\\cdots +n_{14}^4=1599$.\n-/",
    "formal_statement": "/--\nA type representing assignments to the variables $n_1$, $n_2$, ..., $n_{14}$,\nquotiented by permutations of indices.\n-/\nstructure MultisetNatOfLen14 where\n  s : Multiset \u2115\n  p : Multiset.card s = 14\n\nabbrev SolutionSet : Set MultisetNatOfLen14 := \u2205\n\ntheorem usa1979_p1 : \u2200 e, e \u2208 SolutionSet \u2194 (e.s.map (fun x \u21a6 x ^ 4)).sum = 1599 := by sorry",
    "generated_solution": "This problem is about solving a specific Diophantine equation. However, solving Diophantine equations with multiple variables is a complex problem that usually involves number theory and not just programming. Therefore, it is not possible to provide a complete Lean 4 proof for this problem.<|im_end|>\n",
    "generation_time": 7.916959524154663,
    "generation_success": true,
    "solution_length": 302,
    "solution_words": 44,
    "lean_keywords_used": 0,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.061224489795918366
  },
  {
    "index": 4,
    "problem_id": "Imo2018P3",
    "name": "Imo2018P3",
    "category": "combinatorics",
    "tags": [
      "combinatorics"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2018, Problem 3\n\nAn anti-Pascal triangle is an equilateral triangular array of numbers such that,\nexcept for the numbers in the bottom row, each number is the absolute value\nof the difference of the two numbers immediately below it. For example,\nthe following array is an anti-Pascal triangle with four rows\nwhich contains every integer from 1 to 10:\n\n                  4\n                2   6\n              5   7   1\n            8   3  10   9\n\nDoes there exist an anti-Pascal triangle with 2018 rows which contains every\ninteger from 1 to 1 + 2 + ... + 2018?\n-/",
    "formal_statement": "structure Coords where\n(row : \u2115) (col : \u2115)\n\ndef left_child (c : Coords) : Coords :=\n \u27e8c.row.succ, c.col\u27e9\n\ndef right_child (c : Coords) : Coords :=\n  \u27e8c.row.succ, c.col.succ\u27e9\n\n/--\nantipascal triangle with n rows\n-/\nstructure antipascal_triangle (n : \u2115) where\n(f : Coords \u2192 \u2115)\n(antipascal : \u2200 x : Coords, x.row + 1 < n \u2227 x.col \u2264 x.row \u2192\n  f x + f (left_child x) = f (right_child x) \u2228\n  f x + f (right_child x) = f (left_child x))\n\ndef exists_desired_triangle : Prop :=\n   \u2203 t : antipascal_triangle 2018,\n     \u2200 n, 1 \u2264 n \u2192 n \u2264 \u2211 i \u2208 Finset.range 2018, (i + 1) \u2192\n         \u2203 r, r \u2264 2018 \u2227 \u2203 c, c < r \u2227 t.f \u27e8r,c\u27e9 = n\n\nabbrev does_exist : Bool := false\n\ntheorem imo2018_p3 :\n    if does_exist then exists_desired_triangle else \u00ac exists_desired_triangle := by sorry",
    "generated_solution": "```lean\nimport data.list\nimport data.set\nimport data.list.basic\nimport data.set.basic\nimport data.nat.basic\nimport data.nat.add\nimport data.nat.sub\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.sub\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.sub\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.sub\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.min\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.min\nimport data.nat.mul\nimport",
    "generation_time": 7.974923610687256,
    "generation_success": true,
    "solution_length": 874,
    "solution_words": 88,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 5,
    "problem_id": "Imo2024P5",
    "name": "Imo2024P5",
    "category": "combinatorics",
    "tags": [
      "combinatorics"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2024, Problem 5\n\nTurbo the snail plays a game on a board with $2024$ rows and $2023$ columns. There are hidden\nmonsters in $2022$ of the cells. Initially, Turbo does not know where any of the monsters are,\nbut he knows that there is exactly one monster in each row except the first row and the last\nrow, and that each column contains at most one monster.\n\nTurbo makes a series of attempts to go from the first row to the last row. On each attempt,\nhe chooses to start on any cell in the first row, then repeatedly moves to an adjacent cell\nsharing a common side. (He is allowed to return to a previously visited cell.) If he reaches a\ncell with a monster, his attempt ends and he is transported back to the first row to start a\nnew attempt. The monsters do not move, and Turbo remembers whether or not each cell he has\nvisited contains a monster. If he reaches any cell in the last row, his attempt ends and the\ngame is over.\n\nDetermine the minimum value of $n$ for which Turbo has a strategy that guarantees reaching\nthe last row on the $n$th attempt or earlier, regardless of the locations of the monsters.\n-/",
    "formal_statement": "/-! ### Definitions for setting up the problem -/\n\n-- There are N monsters, N+1 columns and N+2 rows.\nvariable {N : \u2115}\n\n/-- A cell on the board for the game. -/\nabbrev Cell (N : \u2115) : Type := Fin (N + 2) \u00d7 Fin (N + 1)\n\n/-- A row that is neither the first nor the last (and thus contains a monster). -/\nabbrev InteriorRow (N : \u2115) : Type := (Set.Icc 1 \u27e8N, by omega\u27e9 : Set (Fin (N + 2)))\n\n/-- Data for valid positions of the monsters. -/\nabbrev MonsterData (N : \u2115) : Type := InteriorRow N \u21aa Fin (N + 1)\n\n/-- The cells with monsters as a Set, given an injection from rows to columns. -/\ndef MonsterData.monsterCells (m : MonsterData N) :\n    Set (Cell N) :=\n  Set.range (fun x : InteriorRow N \u21a6 ((x : Fin (N + 2)), m x))\n\n/-- Whether two cells are adjacent. -/\ndef Adjacent (x y : Cell N) : Prop :=\n  Nat.dist x.1 y.1 + Nat.dist x.2 y.2 = 1\n\n/-- A valid path from the first to the last row. -/\nstructure _Path (N : \u2115) where\n  /-- The cells on the path. -/\n  cells : List (Cell N)\n  nonempty : cells \u2260 []\n  head_first_row : (cells.head nonempty).1 = 0\n  last_last_row : (cells.getLast nonempty).1 = Fin.last (N + 1)\n  valid_move_seq : cells.Chain' Adjacent\n\n/-- The first monster on a path, or `none`. -/\nnoncomputable def _Path.firstMonster (p : _Path N) (m : MonsterData N) : Option (Cell N) :=\n  letI := Classical.propDecidable\n  p.cells.find? (fun x \u21a6 (x \u2208 m.monsterCells : Bool))\n\n/-- A strategy, given the results of initial attempts, returns a path for the next attempt. -/\nabbrev Strategy (N : \u2115) : Type := \u2983k : \u2115\u2984 \u2192 (Fin k \u2192 Option (Cell N)) \u2192 _Path N\n\n/-- Playing a strategy, k attempts. -/\nnoncomputable def Strategy.play (s : Strategy N) (m : MonsterData N) :\n    (k : \u2115) \u2192 Fin k \u2192 Option (Cell N)\n| 0 => Fin.elim0\n| k + 1 => Fin.snoc (s.play m k) ((s (s.play m k)).firstMonster m)\n\n/-- The predicate for a strategy winning within the given number of attempts. -/\ndef Strategy.WinsIn (s : Strategy N) (m : MonsterData N) (k : \u2115) : Prop :=\n  none \u2208 Set.range (s.play m k)\n\n/-- Whether a strategy forces a win within the given number of attempts. -/\ndef Strategy.ForcesWinIn (s : Strategy N) (k : \u2115) : Prop :=\n  \u2200 m, s.WinsIn m k\n\nabbrev answer : \u2115 := 3\n\ntheorem imo2024_p5 : IsLeast {k | \u2203 s : Strategy 2022, s.ForcesWinIn k} answer := by sorry",
    "generated_solution": "```lean\nimport data.list\nimport data.set\nimport data.list.basic\nimport data.set.basic\nimport data.nat.basic\nimport data.nat.add\nimport data.nat.sub\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.mul\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.max\nimport data.nat.min\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.max\nimport data.nat.min\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.max\nimport data.nat.min\nimport data.nat.max\nimport data.nat.min\nimport data.nat.div\nimport data.nat.mod\nimport",
    "generation_time": 8.148488759994507,
    "generation_success": true,
    "solution_length": 874,
    "solution_words": 88,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 6,
    "problem_id": "Imo1977P4",
    "name": "Imo1977P4",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 1977, Problem 4\n\nDefine f(x) = 1 - a cos x - b sin x - A cos 2x - B sin 2x,\nwhere a, b, A, B are real constants.\nSuppose that f(x) \u2265 0 for all real x.\nProve that a^2 + b^2 \u2264 2 and A^2 + B^2 \u2264 1.\n-/",
    "formal_statement": "theorem imo1977_p4 (f : \u211d \u2192 \u211d) (a b A B : \u211d)\n  (h\u2080 : \u2200 x, f x =\n             1 - a * Real.cos x - b * Real.sin x - A * Real.cos (2 * x) - B * Real.sin (2 * x))\n  (h\u2081 : \u2200 x, f x \u2265 0) :\n    a ^ 2 + b ^ 2 \u2264 2 \u2227 A ^ 2 + B ^ 2 \u2264 1 := by sorry",
    "generated_solution": "```lean\nimport data.real.basic\nimport data.real.pi\n\nvariables (a b A B : real)\n\ndef f (x : real) : real := 1 - a * real.cos x - b * real.sin x - A * real.cos (2 * x) - B * real.sin (2 * x)\n\nlemma f_nonneg : \u2200 x, f x \u2265 0 :=\nbegin\n  intros x,\n  unfold f,\n  apply real.le_add_right,\n  apply real.le_add_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul_right,\n  apply real.le_mul",
    "generation_time": 8.010818719863892,
    "generation_success": true,
    "solution_length": 893,
    "solution_words": 108,
    "lean_keywords_used": 4,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.4857142857142857
  },
  {
    "index": 7,
    "problem_id": "Imo2021P6",
    "name": "Imo2021P6",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2021, Problem 6\n\nLet m \u2265 2 be an integer, A a finite set of integers (not necessarily\npositive) and B\u2081, B\u2082, ... B\u2098 subsets of A. Suppose that for every\nk = 1, 2, ..., m, the sum of the elements of B\u2096 is m^k. Prove that\nA contains at least m/2 elements.\n-/",
    "formal_statement": "theorem imo2021_p6 (m : \u2115) (hm : 2 \u2264 m) (A : Finset \u2124)\n    (B : Fin m \u2192 Finset \u2124) (hB : \u2200 k, B k \u2286 A)\n    (hs : \u2200 k, \u2211 b \u2208 B k, b = (m : \u2124) ^ (k.val + 1))\n    : m \u2264 2 * A.card := by sorry",
    "generated_solution": "```lean\nimport data.set\nimport data.nat\nimport data.list\n\ndef power (n : nat) : nat :=\n  match n with\n  | 0 => 1\n  | n => n * power (n - 1)\n\ndef sum_set (s : set nat) : nat :=\n  s.foldr 0 (\u03bb acc x, acc + x)\n\ndef min_elements (m : nat) (A : set nat) (B : list (set nat)) : nat :=\n  match m with\n  | 0 => 0\n  | _ => min (min_elements (m - 1) A B) (sum_set (B.get (m - 1)))\n\ndef max_elements (m : nat) (A : set nat) (B : list (set nat)) : nat :=\n  match m with\n  | 0 => 0\n  | _ => max (max_elements (m - 1) A B) (sum_set (B.get (m - 1)))\n\ndef sum_elements (m : nat) (A : set nat) (B : list (set nat)) : nat :=\n  max_elements m A B - min_elements m A B\n\ndef min_elements (m",
    "generation_time": 7.987894773483276,
    "generation_success": true,
    "solution_length": 669,
    "solution_words": 155,
    "lean_keywords_used": 1,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": false,
    "formal_overlap_ratio": 0.25
  },
  {
    "index": 8,
    "problem_id": "Imo1961P3",
    "name": "Imo1961P3",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 1961, Problem 3\n\nSolve the equation\n\n  cos\u207f x - sin\u207f x = 1,\n\nwhere n is a given positive integer.\n-/",
    "formal_statement": "abbrev solutionSet (n : \u2115+) : Set \u211d :=\n{ x | (\u2203 k : \u2124, k * Real.pi = x) \u2227 Even n.val \u2228 (\u2203 k : \u2124, k * (2 * Real.pi) = x) \u2227 Odd n.val \u2228\n      (\u2203 k : \u2124, -(Real.pi / 2) + k * (2 * Real.pi) = x) \u2227 Odd n.val }\n\ntheorem imo1961_p3 {n : \u2115} {x : \u211d} (npos : 0 < n) :\n    x \u2208 solutionSet \u27e8n, npos\u27e9 \u2194\n    (cos x) ^ n - (sin x) ^ n = 1 := by sorry",
    "generated_solution": "```lean\nimport data.real.basic\nimport data.real.trig\nimport data.real.pow\n\nopen real\n\ndef power (x : real) (n : nat) : real :=\n  match n with\n  | 0 => 1\n  | n => x * power x (n - 1)\n\ndef sin_power (x : real) (n : nat) : real :=\n  power (sin x) n\n\ndef cos_power (x : real) (n : nat) : real :=\n  power (cos x) n\n\ndef equation_value (x : real) (n : nat) : real :=\n  cos_power x n - sin_power x n\n\ndef is_solution (x : real) (n : nat) : Prop :=\n  equation_value x n = 1\n\ndef is_solution_proof (x : real) (n : nat) : is_solution x n :=\nbegin\n  ext,\n  rw [cos_power, sin_power],\n  rw [pow_eq_pow_cos],\n  rw [pow_eq_pow_sin],\n  rw [pow_eq_pow_cos],\n  rw [pow_eq_pow_sin],\n  rw [pow_eq_pow_cos],\n  rw [pow_eq_pow_sin],\n  rw [pow_eq_pow_cos],\n  rw",
    "generation_time": 7.957659959793091,
    "generation_success": true,
    "solution_length": 738,
    "solution_words": 134,
    "lean_keywords_used": 2,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.2692307692307692
  },
  {
    "index": 9,
    "problem_id": "Usa2000P1",
    "name": "Usa2000P1",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": true,
    "problem_statement": "/-!\nUSA Mathematical Olympiad 2000, Problem 1\n\nA function f : \u211d \u2192 \u211d is called \"very convex\" if it satisfies\n\n  \u2200 x y : \u211d, (f(x) + f(y))/2 \u2265  f((x + y)/2) + |x - y|.\n\nShow that there exist no very convex functions.\n-/",
    "formal_statement": "theorem usa2000_p1 :\n    \u00ac\u2203 f : \u211d \u2192 \u211d,\n      \u2200 x y : \u211d, f ((x + y) / 2) + |x - y| \u2264 (f x + f y) / 2 := by sorry",
    "generated_solution": "To solve this problem, we need to use the definition of very convex functions to show that there are no very convex functions. Here's the Lean 4 code for the proof:\n\n```lean\nimport real\n\n-- Define a very convex function f\ndef veryConv : \u211d \u2192 \u211d \u2192 Prop := \u2200 x y : \u211d, (f x + f y) / 2 \u2265 f ((x + y) / 2) + |x - y|\n\n-- Show that there are no very convex functions\nlemma noVeryConv : \u2200 f : \u2192 \u211d, veryConv f \u2192 false\n| f := by intros x y hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n  apply hxy\n ",
    "generation_time": 7.958162069320679,
    "generation_success": true,
    "solution_length": 732,
    "solution_words": 152,
    "lean_keywords_used": 6,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.8
  },
  {
    "index": 10,
    "problem_id": "Imo2022P3",
    "name": "Imo2022P3",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2022, Problem 3\n\nLet k be a positive integer and let S be a finite set of odd prime\nintegers. Prove that there is at most one way (up to rotation and reflection)\nto place the elements of S around a circle such that the product of any\ntwo neighbors is of the form x\u00b2 + x + k for some positive integer x.\n\n-/",
    "formal_statement": "/- special open -/ open Finset\n\n\n\n\n\n\n\n/-- The condition of the problem on a placement of numbers round a circle. -/\ndef Condition (k : \u2115) (S : Finset \u2115) (p : Fin (Finset.card S) \u2192 S) : Prop :=\n  \u2200 i, have : NeZero (Finset.card S) := \u27e8i.pos.ne'\u27e9\n  \u2203 x : \u2115, 0 < x \u2227 ((p i : \u2115) * (p (i + 1) : \u2115)) = x ^ 2 + x + k\n\ntheorem imo2023_p3\n    {k : \u2115} (hk : 0 < k) (S : Finset \u2115) (hS : \u2200 p \u2208 S, Odd p \u2227 Nat.Prime p)\n    {p\u2081 p\u2082 : Fin (Finset.card S) \u2192 S} (hp\u2081 : Condition k S p\u2081) (hp\u2082 : Condition k S p\u2082) :\n    (\u2203 i, \u2200 j, p\u2082 j = p\u2081 (j + i)) \u2228 \u2203 i, \u2200 j, p\u2082 j = p\u2081 (Fin.rev j + i) := by sorry",
    "generated_solution": "```lean\nimport data.set\nimport data.nat.prime\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.add\nimport data.nat.sub\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data.nat.div\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.mod\nimport data",
    "generation_time": 7.956634759902954,
    "generation_success": true,
    "solution_length": 857,
    "solution_words": 87,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 11,
    "problem_id": "Imo1978P1",
    "name": "Imo1978P1",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 1978, Problem 1\n\nm and n are positive integers with m < n.\nThe last three decimal digits of 1978\u1d50 are the same as the\nlast three decimal digits of 1978\u207f.\nFind m and n such that m + n has the least possible value.\n-/",
    "formal_statement": "abbrev solution : \u2115 \u00d7 \u2115 := (3, 103)\n\nabbrev ValidPair : \u2115 \u00d7 \u2115 \u2192 Prop\n| (m, n) => 1 \u2264 m \u2227 m < n \u2227 (1978^m) % 1000 = (1978^n) % 1000\n\ntheorem imo1978_p1 (m n : \u2115)\n    (hmn : (m, n) = solution) :\n    ValidPair (m, n) \u2227\n    (\u2200 m' n' : \u2115, ValidPair (m', n') \u2192 m + n \u2264 m' + n') := by sorry",
    "generated_solution": "```lean\nimport data.nat.basic\n\ndef last_three_digits (x : nat) : nat := x % 1000\n\ndef same_last_three_digits (m n : nat) : bool := last_three_digits (1978 ^ m) = last_three_digits (1978 ^ n)\n\ndef find_solution (m : nat) : nat := nat.find (\u03bb n : n > m, same_last_three_digits m n), m + n\n\ndef find_solution_one : find_solution 1 = 101 :=\nbegin\n  unfold find_solution,\n  apply find,\n  intro n,\n  cases n,\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false.el },\n  { apply false",
    "generation_time": 8.241830825805664,
    "generation_success": true,
    "solution_length": 858,
    "solution_words": 153,
    "lean_keywords_used": 4,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": false,
    "formal_overlap_ratio": 0.2682926829268293
  },
  {
    "index": 12,
    "problem_id": "Imo2004P2",
    "name": "Imo2004P2",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2004, Problem 2\n\nFind all polynomials P with real coefficients such that\nfor all reals a,b,c such that ab + bc + ca = 0 we have\n\n    P(a - b) + P(b - c) + P(c - a) = 2P(a + b + c).\n-/",
    "formal_statement": "abbrev SolutionSet : Set (Polynomial \u211d) := \n  {P | \u2203 (a\u2082 a\u2084 : \u211d), P = Polynomial.monomial 2 a\u2082 + Polynomial.monomial 4 a\u2084}\n\ntheorem imo2004_p2 (P : Polynomial \u211d) :\n    P \u2208 SolutionSet \u2194\n    \u2200 a b c, a * b + b * c + c * a = 0 \u2192\n      P.eval (a - b) + P.eval (b - c) + P.eval (c - a) =\n      2 * P.eval (a + b + c) := by sorry",
    "generated_solution": "```lean\nimport data.polynomial\nimport data.polynomial.eval\nimport data.polynomial.expand\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data.polynomial.add\nimport data",
    "generation_time": 7.963268041610718,
    "generation_success": true,
    "solution_length": 1153,
    "solution_words": 87,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 13,
    "problem_id": "Bulgaria1998P2",
    "name": "Bulgaria1998P2",
    "category": "geometry",
    "tags": [
      "geometry"
    ],
    "solved": false,
    "problem_statement": "/-!\n# Bulgarian Mathematical Olympiad 1998, Problem 2\n\nA convex quadrilateral ABCD has AD = CD and \u2220DAB = \u2220ABC < 90\u00b0.\nThe line through D and the midpoint of BC intersects line AB\nin point E. Prove that \u2220BEC = \u2220DAC. (Note: The problem is valid\nwithout the assumption \u2220ABC < 90\u00b0.)\n-/",
    "formal_statement": "/- special open -/ open EuclideanGeometry\n\n\n\n\n\n\ntheorem bulgaria1998_p2\n    (A B C D E M : EuclideanSpace \u211d (Fin 2))\n    (H1 : dist D A = dist D C)\n    (H2 : \u2220 D A B = \u2220 A B C)\n    (H3 : M = midpoint \u211d B C) :\n    \u2220 B E C = \u2220 D A C := by sorry",
    "generated_solution": "```python\nimport data.real.basic\nimport geometry.geometry.basic\n\nnamespace problem1998\n\nopen geometry\n\ndef problem1998 (A B C : point) (D E : point) :\n  convex A B C D \u2192\n  AD = CD \u2192\n  \u2220DAB = \u2220ABC \u2192\n  \u2220BEC = \u2220DAC :=\nbegin\n  intros A B C D E convex AD_CD DAB_ABC,\n  let BC = segment B C,\n  let AB = segment A B,\n  let CD = segment C D,\n  let DE = segment D E,\n  let AE = segment A E,\n  let BE = segment B E,\n  let CE = segment C E,\n  let AD = segment A D,\n  let BD = segment B D,\n  let CD = segment C D,\n  let AB = segment A B,\n  let BC = segment B C,\n  let CD = segment C D,\n  let AE = segment A E,\n  let BE = segment B E,\n  let CE = segment C E,\n  let AD = segment A D,\n  let BD = segment B D,\n  let CD = segment C D,\n  let AB = segment A B,\n ",
    "generation_time": 8.011758804321289,
    "generation_success": true,
    "solution_length": 743,
    "solution_words": 169,
    "lean_keywords_used": 2,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.3333333333333333
  },
  {
    "index": 14,
    "problem_id": "Imo2017P6",
    "name": "Imo2017P6",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2017, Problem 6\n\nA point (x,y) \u2208 \u2124 \u00d7 \u2124 is called primitive if gcd(x,y) = 1.\nLet S be a finite set of primitive points.\nProve that there exists n > 0 and integers a\u2080,a\u2081,...,a\u2099\nsuch that\n\n  a\u2080x\u207f + a\u2081x\u207f\u207b\u00b9y + a\u2082x\u207f\u207b\u00b2y\u00b2 + ... + a\u2099\u208b\u2081xy\u207f\u207b\u00b9 + a\u2099y\u207f = 1\n\nfor each (x,y) \u2208 S.\n\n-/",
    "formal_statement": "theorem imo2017_p6 (S : Finset (\u2124 \u00d7 \u2124)) (hS : \u2200 s \u2208 S, gcd s.1 s.2 = 1) :\n    \u2203 n : \u2115, 0 < n \u2227 \u2203 a : \u2115 \u2192 \u2124,\n      \u2200 s \u2208 S, \u2211 i \u2208 Finset.range n, a i * s.1 ^ i * s.2 ^ (n - i) = 1 := by sorry",
    "generated_solution": "```\nimport data.zmod.basic\nimport data.list.basic\n\ndef primitive_point (x y : int) : bool := int.gcd x y = 1\n\ndef primitive_set (s : list (int \u00d7 int)) : bool := s.forall (\u03bb (x, y), primitive_point x y)\n\ndef solution_exists (s : list (int \u00d7 int)) : bool :=\n  let n := s.length\n  let a : list int := list.init n (\u03bb i, 0)\n  let b : list int := list.init n (\u03bb i, 0)\n  let c : list int := list.init n (\u03bb i, 0)\n  let d : list int := list.init n (\u03bb i, 0)\n  let e : list int := list.init n (\u03bb i, 0)\n  let f : list int := list.init n (\u03bb i, 0)\n  let g : list int := list.init n (\u03bb i, 0)\n  let h : list int := list.init n (\u03bb i, 0)\n  let i : list int := list.init n (\u03bb i, 0)\n  let j : list int := list.init n (\u03bb i, 0)\n",
    "generation_time": 7.994669437408447,
    "generation_success": true,
    "solution_length": 706,
    "solution_words": 162,
    "lean_keywords_used": 1,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.21951219512195122
  },
  {
    "index": 15,
    "problem_id": "Imo2009P6",
    "name": "Imo2009P6",
    "category": "combinatorics",
    "tags": [
      "combinatorics"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2009, Problem 6\n\nLet a\u2081, a\u2082, ..., a\u2099 be distinct positive integers and let M\nbe a set of n - 1 positive integers not containing\ns = a\u2081 + a\u2082 + ... + a\u2099. A grasshopper is to jump along the\nreal axis, starting at the point 0 and making n jumps to\nthe right with lengths a\u2081, a\u2082, ..., a\u2099 in some order. Prove\nthat the order can be chosen in such a way that the\ngrasshopper never lands on any point in M.\n-/",
    "formal_statement": "theorem imo2009_p6 (n : \u2115) (hn : 0 < n)\n    (a : Fin n \u2192 \u2124)\n    (ainj : a.Injective)\n    (apos : \u2200 i, 0 < a i)\n    (M : Finset \u2124)\n    (Mpos : \u2200 m \u2208 M, 0 < m)\n    (Mcard : M.card = n - 1)\n    (hM : \u2211 i, a i \u2209 M)\n    : \u2203 p : Equiv.Perm (Fin n),\n        \u2200 i : Fin n,\n          \u2211 j \u2208 Finset.univ.filter (\u00b7 \u2264 i), a (p j) \u2209 M := by sorry",
    "generated_solution": "```python\nimport data.set\nimport data.list\nimport data.nat\n\nnamespace problem\n\nvariables (n : nat) (a : list nat) (M : set nat) (s : nat)\n\ndef can_jump (n : nat) (a : list nat) (M : set nat) (s : nat) : bool :=\n  let s = a.sum\n  let a = a.sort\n  let M = M.sort\n  let a = a.reverse\n  let M = M.reverse\n  let s = a.sum\n  let a = a.sort\n  let M = M.sort\n  let a = a.reverse\n  let M = M.reverse\n  let s = a.sum\n  let a = a.sort\n  let M = M.sort\n  let a = a.reverse\n  let M = M.reverse\n  let s = a.sum\n  let a = a.sort\n  let M = M.sort\n  let a = a.reverse\n  let M = M.reverse\n  let s = a.sum\n  let a = a.sort\n  let M = M.sort\n  let a = a.reverse\n  let M = M.reverse\n  let s = a.sum\n  let a =",
    "generation_time": 8.005107164382935,
    "generation_success": true,
    "solution_length": 686,
    "solution_words": 150,
    "lean_keywords_used": 1,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.1509433962264151
  },
  {
    "index": 16,
    "problem_id": "Imo2013P1",
    "name": "Imo2013P1",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2013, Problem 1\n\nProve that for any pair of positive integers k and n, there exist k positive integers\nm\u2081, m\u2082, ..., m\u2096 (not necessarily different) such that\n\n  1 + (2\u1d4f - 1)/ n = (1 + 1/m\u2081) * (1 + 1/m\u2082) * ... * (1 + 1/m\u2096).\n\n-/",
    "formal_statement": "theorem imo2013_p1 (n : \u2115+) (k : \u2115) :\n    \u2203 m : \u2115 \u2192 \u2115+,\n      (1 : \u211a) + (2 ^ k - 1) / n = \u220f i \u2208 Finset.range k, (1 + 1 / (m i : \u211a)) := by sorry",
    "generated_solution": "```lean\nimport data.nat\nimport data.nat.basic\nimport data.nat.cast\nimport data.nat.div\nimport data.nat.eq\nimport data.nat.le\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.sub\nimport data.nat.add\nimport data.nat.mul\nimport data.nat.sub\nimport data.nat.div\nimport data.nat.eq\nimport data.nat.le\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.sub\nimport data.nat.add\nimport data.nat.mul\nimport data.nat.sub\nimport data.nat.div\nimport data.nat.le\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.sub\nimport data.nat.add\nimport data.nat.mul\nimport data.nat.sub\nimport data.nat.div\nimport data.nat.eq\nimport data.nat.le\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.sub\nimport data.nat.add\nimport data.nat.mul\nimport data.nat.sub\nimport data.nat.div\nimport data.nat.le\nimport data.nat.mod\nimport data.nat.pow\nimport data",
    "generation_time": 8.212217807769775,
    "generation_success": true,
    "solution_length": 850,
    "solution_words": 87,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 17,
    "problem_id": "Imo1979P5",
    "name": "Imo1979P5",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 1979, Problem 5\n\nFind all real numbers a for which there exist\nnon-negative real numbers x1, x2, x3, x4, x5 satisfying:\n\nx1 + 2x_2 + 3x_3 + 4x_4 + 5x_5 = a,\nx1 + 2^3x_2 + 3^3x_3 + 4^3x_4 + 5^3x_5 = a^2,\nx1 + 2^5x_2 + 3^5x_3 + 4^5x_4 + 5^5x_5 = a^3.\n-/",
    "formal_statement": "abbrev solution_set : Set \u211d := {0, 1, 4, 9, 16, 25}\n\ntheorem imo1979_p5 (a : \u211d) :\n  (\u2203 x1 x2 x3 x4 x5 : \u211d,\n    x1 \u2265 0 \u2227 x2 \u2265 0 \u2227 x3 \u2265 0 \u2227 x4 \u2265 0 \u2227 x5 \u2265 0 \u2227\n    x1 + 2*x2 + 3*x3 + 4*x4 + 5*x5 = a \u2227\n    x1 + 2^3*x2 + 3^3*x3 + 4^3*x4 + 5^3*x5 = a^2 \u2227\n    x1 + 2^5*x2 + 3^5*x3 + 4^5*x4 + 5^5*x5 = a^3 ) \u2194 a \u2208 solution_set := by sorry",
    "generated_solution": "```lean\nimport data.real.basic\nimport data.real.pi\nimport data.real.exp\nimport data.real.log\nimport data.real.pow\n\ndef find_solution (a : real) : bool :=\n  exists x1 : real,\n  exists x2 : real,\n  exists x3 : real,\n  exists x4 : real,\n  exists x5 : real,\n  x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a,\n  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2,\n  x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3\n\ndef find_solution_exists (a : real) : find_solution a :=\n  let x1 := 0,\n  let x2 := 0,\n  let x3 := 0,\n  let x4 := 0,\n  let x5 := 0,\n  x1 + 2 * x",
    "generation_time": 7.994918346405029,
    "generation_success": true,
    "solution_length": 576,
    "solution_words": 150,
    "lean_keywords_used": 1,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.22916666666666666
  },
  {
    "index": 18,
    "problem_id": "Imo1970P6",
    "name": "Imo1970P6",
    "category": "combinatorics",
    "tags": [
      "combinatorics"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 1970, Problem 6\n\nIn a plane there are 100 points, no three of which are collinear.\nConsider all possible triangles having these points as vertices.\nProve that no more that 70% of these triangles are acute.\n-/",
    "formal_statement": "/- special open -/ open EuclideanGeometry\n\n\n\n\n\n\nabbrev Pt := EuclideanSpace \u211d (Fin 2)\n\ndef AcuteTriangle (T : Affine.Triangle \u211d Pt) : Prop :=\n  \u2220 (T.points 1) (T.points 2) (T.points 3) < Real.pi / 2 \u2227\n  \u2220 (T.points 2) (T.points 3) (T.points 1) < Real.pi / 2 \u2227\n  \u2220 (T.points 3) (T.points 1) (T.points 2) < Real.pi / 2\n\ntheorem imo1970_p6\n    (P : Fin 100 \u2192 Pt)\n    (hP : \u2200 a b c : Fin 100,\n             List.Nodup [a, b, c] \u2192 \u00ac Collinear \u211d {P c, P b, P c}) :\n    let cardAll := Nat.card { t : Affine.Triangle \u211d Pt |\n                              \u2203 a b c : Fin 100, ![P a, P b, P c] = t.points }\n    let cardAcute :=\n      Nat.card { t : Affine.Triangle \u211d Pt | \u2203 a b c : Fin 100, ![P a, P b, P c] = t.points \u2227\n                                            AcuteTriangle t }\n    (cardAcute : \u211a) / cardAll \u2264 7 / 10 := by sorry",
    "generated_solution": "```python\nimport data.real.basic\nimport data.real.basic1\nimport data.real.basic2\nimport data.real.basic3\nimport data.real.basic4\nimport data.real.basic5\nimport data.real.basic6\nimport data.real.basic7\nimport data.real.basic8\nimport data.real.basic9\nimport data.real.basic0\nimport data.real.basic1\nimport data.real.basic2\nimport data.real.basic3\nimport data.real.basic4\nimport data.real.basic5\nimport data.real.basic6\nimport data.real.basic7\nimport data.real.basic8\nimport data.real.basic9\nimport data.real.basic0\nimport data.real.basic1\nimport data.real.basic2\nimport data.real.basic3\nimport data.real.basic4\nimport data.real.basic5\nimport data.real.basic6\nimport data.real.basic7\nimport data.real.basic8\nimport data.real.basic9\nimport data.real.basic0\nimport data.real.basic1\nimport data.real.basic2\nimport data.real.basic3\nimport data.real.basic4\nimport data.real.basic5\nimport data.real.basic6\nimport data.real.basic7\nimport data.real.basic8\nimport data.real.basic9\nimport data.real.basic0\nimport data.real.basic1\nimport data",
    "generation_time": 8.042969226837158,
    "generation_success": true,
    "solution_length": 1028,
    "solution_words": 87,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 19,
    "problem_id": "Imo2008P2a",
    "name": "Imo2008P2a",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2008, Problem 2\n(a) Prove that\n          ```\n          x^2 / (x-1)^2 + y^2 / (y-1)^2 + z^2 / (z-1)^2 \u2265 1\n          ```\nfor all real numbers `x`,`y`, `z`, each different from 1, and satisfying `xyz = 1`.\n-/",
    "formal_statement": "theorem imo2008_p2a (x y z : \u211d) (h : x * y * z = 1) (hx : x \u2260 1) (hy : y \u2260 1) (hz : z \u2260 1) :\n    x ^ 2 / (x - 1) ^ 2 + y ^ 2 / (y - 1) ^ 2 + z ^ 2 / (z - 1) ^ 2 \u2265 1 := by sorry",
    "generated_solution": "```lean\nimport data.real.basic\n\nopen real nat\n\ndef problem2 (x y z : real) (x \u2260 1) (y \u2260 1) (z \u2260 1) (x * y * z = 1) : (x^2 / (x-1)^2 + y^2 / (y-1)^2 + z^2 / (z-1)^2 \u2265 1) :=\nbegin\n  split,\n  { apply (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans (le_trans",
    "generation_time": 8.03572154045105,
    "generation_success": true,
    "solution_length": 726,
    "solution_words": 101,
    "lean_keywords_used": 2,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": false,
    "formal_overlap_ratio": 0.5
  },
  {
    "index": 20,
    "problem_id": "Usa2011P4",
    "name": "Usa2011P4",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": true,
    "problem_statement": "/-!\n# USA Mathematical Olympiad 2011, Problem 4\n\nFor any integer n \u2265 2, define P(n) to be the proposition:\n\n  P(n) \u2261  2^(2^n) % (2^n - 1) is a power of 4\n\nEither prove that P(n) is always true, or find a counterexample.\n-/",
    "formal_statement": "abbrev P (n : \u2115) : Prop := \u2203 k, 4^k = 2^(2^n) % (2^n - 1)\n\ninductive SolutionData where\n| AlwaysTrue : SolutionData\n| Counterexample : \u2115 \u2192 SolutionData\n\nabbrev solution_data : SolutionData := SolutionData.Counterexample 25\n\ntheorem usa2011_p4 :\n    match solution_data with\n    | .AlwaysTrue => \u2200 n, 2 \u2264 n \u2192 P n\n    | .Counterexample m => 2 \u2264 m \u2227 \u00ac P m := by sorry",
    "generated_solution": "```\nimport data.nat.basic\nimport data.nat.mod\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data.nat.pow\nimport data",
    "generation_time": 8.0147385597229,
    "generation_success": true,
    "solution_length": 857,
    "solution_words": 87,
    "lean_keywords_used": 0,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.0
  },
  {
    "index": 21,
    "problem_id": "Imo2007P1b",
    "name": "Imo2007P1b",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2007, Problem 1\n\nReal numbers a\u2081, a\u2082, ..., a\u2099 are fixed. For each 1 \u2264 i \u2264 n,\nwe let d\u1d62 = max {a\u2c7c : 1 \u2264 j \u2264 i} - min {a\u2c7c : i \u2264 j \u2264 n},\nand let d = max {d\u1d62 : 1 \u2264 i \u2264 n}.\n\n(b) Show that there exists some choice of x\u2081 \u2264 ... \u2264 x\u2099 which achieves equality.\n-/",
    "formal_statement": "noncomputable abbrev d {n : \u2115} (a : Fin n \u2192 \u211d) (i : Fin n) :=\n  (\u2a06 j : {j // j \u2264 i}, a j - \u2a05 j : {j // i \u2264 j}, a j)\n\ntheorem imo2007_p1b {n : \u2115} (hn : 0 < n) {a : Fin n \u2192 \u211d} :\n    \u2203 x : Fin n \u2192 \u211d, Monotone x \u2227\n      (\u2a06 i, d a i) / 2 = \u2a06 i, |x i - a i| := by sorry",
    "generated_solution": "```python\nimport data.real.basic\nimport data.list.basic\nimport data.set.basic\n\ndef d (n : nat) (a : list real) : real :=\n  let d := a.map (\u03bb i, max (a.take i) - min (a.drop i))\n  max d\n\ndef exists_choice (n : nat) (a : list real) : bool :=\n  let d := a.map (\u03bb i, max (a.take i) - min (a.drop i))\n  let m := max d\n  let s := a.map (\u03bb i, max (a.take i) - min (a.drop i))\n  exists i, m i \u2208 s\n\ndef exists_choice (n : nat) (a : list real) : bool :=\n  let d := a.map (\u03bb i, max (a.take i) - min (a.drop i))\n  let m := max d\n  let s := a.map (\u03bb i, max (a.take i) - min (a.drop i))\n  exists i, m i \u2208 s\n```\n\nThis Lean 4 code defines a function `d` that calculates the maximum difference between the maximum and minimum values in different segment of a given list of numbers. It then defines",
    "generation_time": 7.9577155113220215,
    "generation_success": true,
    "solution_length": 780,
    "solution_words": 164,
    "lean_keywords_used": 1,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.1875
  },
  {
    "index": 22,
    "problem_id": "Imo2001P1",
    "name": "Imo2001P1",
    "category": "geometry",
    "tags": [
      "geometry"
    ],
    "solved": false,
    "problem_statement": "/-!\n# International Mathematical Olympiad 2001, Problem 1\n\nLet ABC be an acute-angled triangle with O as its circumcenter. Let P\non line BC be the foot of the altitude from A. Assume that\n\u2220BCA \u2265 \u2220ABC + 30\u00b0. Prove that \u2220CAB + \u2220COP < 90\u00b0.\n-/",
    "formal_statement": "/- special open -/ open EuclideanGeometry\n\n\n\n\n\n\ntheorem imo2001_p1\n    (A B C : EuclideanSpace \u211d (Fin 2))\n    (hABC : AffineIndependent \u211d ![A, B, C])\n    (hAcuteA : \u2220 C A B < Real.pi / 2)\n    (hAcuteB : \u2220 A B C < Real.pi / 2)\n    (hAcuteC : \u2220 B C A < Real.pi / 2)\n    (hAB : \u2220 A B C + Real.pi / 6 \u2264 \u2220 B C A)\n    : let ABC : Affine.Triangle _ _ := \u27e8![A, B, C], hABC\u27e9\n      let P := EuclideanGeometry.orthogonalProjection line[\u211d, B, C] A\n      \u2220 C A B + \u2220 C ABC.circumcenter P < Real.pi / 2 := by sorry",
    "generated_solution": "```python\nimport data.real.basic\nimport data.real.pi\nimport trigonometric_functions\n\nnamespace triangle_angled\n\nopen real\n\ndef problem_1 (x : real) : Prop :=\n  \u2220BCA \u2265 \u2220ABC + 30\u00b0 \u2192 \u2220CAB + \u2220COP < 90\u00b0\n\ndef problem_1_proof (x : real) : problem_1 x :=\n  begin\n    intros,\n    sorry\n  end\n\nend triangle_angled\n```<|im_end|>\n",
    "generation_time": 7.955293893814087,
    "generation_success": true,
    "solution_length": 318,
    "solution_words": 46,
    "lean_keywords_used": 3,
    "has_proof_structure": true,
    "has_sorry": true,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.12
  },
  {
    "index": 23,
    "problem_id": "Usa1998P1",
    "name": "Usa1998P1",
    "category": "number theory",
    "tags": [
      "number theory"
    ],
    "solved": true,
    "problem_statement": "/-!\n# USA Mathematical Olympiad 1998, Problem 1\n\nSuppose that the set { 1, 2, ..., 1998 } has been partitioned into disjoint\npairs {a\u1d62, b\u1d62}, where 1 \u2264 i \u2264 999, so that for all i, |a\u1d62 - b\u1d62| = 1 or 6.\n\nProve that the sum\n\n  |a\u2081 - b\u2081| + |a\u2082 - b\u2082| + ... + |a\u2089\u2089\u2089 - b\u2089\u2089\u2089|\n\n-/",
    "formal_statement": "/--\n `ab 0 i` is a\u1d62 and `ab 1 i` is `b\u1d62`\n-/\ntheorem usa1998_p1\n    (ab : Fin 2 \u2192 Fin 999 \u2192 Finset.Icc 1 1998)\n    (hab : (ab.uncurry).Bijective)\n    (habd : \u2200 i : Fin 999,\n              |(ab 0 i : \u2124) - (ab 1 i : \u2124)| = 1 \u2228\n              |(ab 0 i : \u2124) - (ab 1 i : \u2124)| = 6) :\n    (\u2211 i : Fin 999, |(ab 0 i : \u2124) - (ab 1 i : \u2124)|) % 10 = 9 := by sorry",
    "generated_solution": "```python\nimport data.list\nimport data.set\nimport data.ring\n\ndef sum_of_differences ( : list nat) ( : nat) : nat :=\n  sum (\u03bb x, abs (x - y))\n\ndef sum_of_differences_sum ( : list nat) ( : list nat) : nat :=\n  sum_of_differences a (sum_of_differences b 0)\n\ndef sum_of_differences_sum' ( : list nat) ( : list nat) : nat :=\n  sum_of_differences a (sum_of_differences b 1)\n\ndef sum_of_differences_sum' ( : list nat) ( : list nat) : nat :=\n  sum_of_differences a (sum_of_differences b 2)\n\ndef sum_of_differences_sum' ( : list nat) ( : list nat) : nat :=\n  sum_of_differences a (sum_of_differences b 3)\n\ndef sum_of_differences_sum' ( : list nat) ( : list nat) : nat :=\n  sum_of_differences a (sum_of_differences b 4)\n\ndef sum_of_differences_sum' ( : list nat) ( : list nat) : nat :=\n  sum_of_differences a (sum_of_differences b 5)\n\ndef sum",
    "generation_time": 7.956455707550049,
    "generation_success": true,
    "solution_length": 832,
    "solution_words": 136,
    "lean_keywords_used": 1,
    "has_proof_structure": false,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.07317073170731707
  },
  {
    "index": 24,
    "problem_id": "Imo1982P3b",
    "name": "Imo1982P3b",
    "category": "algebra",
    "tags": [
      "algebra"
    ],
    "solved": true,
    "problem_statement": "/-!\n# International Mathematical Olympiad 1982, Problem 3\n\nConsider infinite sequences $\\{x_n \\}$ of positive reals such that $x_0 = 0$ and\n$x_0 \\geq x_1 \\geq x_2 \\geq ...$\n\nb) Find such a sequence such that for all n:\n\n$\\frac{x_0^2}{x_1} + \\ldots + \\frac{x_{n-1}^2}{x_n} < 4$\n-/",
    "formal_statement": "noncomputable abbrev sol : \u2115 \u2192 \u211d := fun k \u21a6 2\u207b\u00b9 ^ k\n\ntheorem imo1982_q3b : Antitone sol \u2227 sol 0 = 1 \u2227 (\u2200 k, 0 < sol k)\n    \u2227 \u2200 n, \u2211 k \u2208 Finset.range n, sol k ^ 2 / sol (k + 1) < 4 := by sorry",
    "generated_solution": "Here is the Lean 4 code for the problem:\n\n```lean\nimport data.real.basic\n\ndef sequence (input n : nat) : real :=\n  if n = 0 then 0 else n / (n + 1)\n\ndef sequence_sum (input n : nat) : real :=\n  if n = 0 then 0 else (sequence (n - 1) ^ 2) / (sequence n) + sequence_sum (n - 1)\n\nlemma sequence_sum_le (n : nat) : (sequence_sum n) < 4 :=\n  induction n with n hI\n  | 0 => by simp\n  | n => begin\n    unfold sequence_sum,\n    simp,\n    use n,\n    split,\n    apply sequence_sum_le,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply nat.succ,\n    apply",
    "generation_time": 7.998324394226074,
    "generation_success": true,
    "solution_length": 804,
    "solution_words": 129,
    "lean_keywords_used": 6,
    "has_proof_structure": true,
    "has_sorry": false,
    "lean_compilation_success": false,
    "lean_error_message": "",
    "has_balanced_brackets": true,
    "formal_overlap_ratio": 0.32432432432432434
  }
]